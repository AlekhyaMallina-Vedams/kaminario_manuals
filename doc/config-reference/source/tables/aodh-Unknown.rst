..
    Warning: Do not edit this file. It is automatically generated from the
    software project's code and your changes will be overwritten.

    The tool to generate this file lives in openstack-doc-tools repository.

    Please make any changes needed in the code, then run the
    autogenerate-config-doc tool from the openstack-doc-tools repository, or
    ask for help on the documentation mailing list, IRC channel or meeting.

.. _aodh-Unknown:

.. list-table:: Description of Unknown configuration options
   :header-rows: 1
   :class: config-ref-table

   * - Configuration option = Default value
     - Description
   * - **[DEFAULT]**
     -
   * - ``additional_ingestion_lag`` = ``0``
     - (Integer) The number of seconds to extend the evaluation windows to compensate the reporting/ingestion lag.
   * - ``conn_pool_min_size`` = ``2``
     - (Integer) The pool size limit for connections expiration policy
   * - ``conn_pool_ttl`` = ``1200``
     - (Integer) The time-to-live in sec of idle connections in the pool
   * - ``rest_notifier_ca_bundle_certificate_path`` = ``None``
     - (String) SSL CA_BUNDLE certificate for REST notifier
   * - ``rpc_zmq_serialization`` = ``json``
     - (String) Default serialization mechanism for serializing/deserializing outgoing/incoming messages
   * - ``use_router_proxy`` = ``True``
     - (Boolean) Use ROUTER remote proxy.
   * - ``zmq_immediate`` = ``False``
     - (Boolean) This option configures round-robin mode in zmq socket. True means not keeping a queue when server side disconnects. False means to keep queue and messages even if server is disconnected, when the server appears we send all accumulated messages to it.
   * - ``zmq_target_update`` = ``180``
     - (Integer) Update period in seconds of a name service record about existing target.
   * - **[api]**
     -
   * - ``alarm_max_actions`` = ``-1``
     - (Integer) Maximum count of actions for each state of an alarm, non-positive number means no limit.
   * - ``enable_combination_alarms`` = ``False``
     - (Boolean) DEPRECATED: Enable deprecated combination alarms. Combination alarms are deprecated. This option and combination alarms will be removed in Aodh 5.0.
   * - ``project_alarm_quota`` = ``None``
     - (Integer) Maximum number of alarms defined for a project.
   * - ``user_alarm_quota`` = ``None``
     - (Integer) Maximum number of alarms defined for a user.
   * - **[coordination]**
     -
   * - ``max_retry_interval`` = ``30``
     - (Integer) Maximum number of seconds between retry to join partitioning group
   * - ``retry_backoff`` = ``1``
     - (Integer) Retry backoff factor when retrying to connect with coordination backend
   * - **[evaluator]**
     -
   * - ``workers`` = ``1``
     - (Integer) Number of workers for evaluator service. default value is 1.
   * - **[listener]**
     -
   * - ``batch_size`` = ``1``
     - (Integer) Number of notification messages to wait before dispatching them.
   * - ``batch_timeout`` = ``None``
     - (Integer) Number of seconds to wait before dispatching samples when batch_size is not reached (None means indefinitely).
   * - ``event_alarm_topic`` = ``alarm.all``
     - (String) The topic that aodh uses for event alarm evaluation.
   * - ``workers`` = ``1``
     - (Integer) Number of workers for listener service. default value is 1.
   * - **[notifier]**
     -
   * - ``batch_size`` = ``1``
     - (Integer) Number of notification messages to wait before dispatching them.
   * - ``batch_timeout`` = ``None``
     - (Integer) Number of seconds to wait before dispatching samples when batch_size is not reached (None means indefinitely).
   * - ``workers`` = ``1``
     - (Integer) Number of workers for notifier service. default value is 1.
   * - **[oslo_messaging_amqp]**
     -
   * - ``addressing_mode`` = ``dynamic``
     - (String) Indicates the addressing mode used by the driver. Permitted values: 'legacy' - use legacy non-routable addressing 'routable' - use routable addresses 'dynamic' - use legacy addresses if the message bus does not support routing otherwise use routable addressing
   * - ``anycast_address`` = ``anycast``
     - (String) Appended to the address prefix when sending to a group of consumers. Used by the message bus to identify messages that should be delivered in a round-robin fashion across consumers.
   * - ``connection_retry_backoff`` = ``2``
     - (Integer) Increase the connection_retry_interval by this many seconds after each unsuccessful failover attempt.
   * - ``connection_retry_interval`` = ``1``
     - (Integer) Seconds to pause before attempting to re-connect.
   * - ``connection_retry_interval_max`` = ``30``
     - (Integer) Maximum limit for connection_retry_interval + connection_retry_backoff
   * - ``default_notification_exchange`` = ``None``
     - (String) Exchange name used in notification addresses. Exchange name resolution precedence: Target.exchange if set else default_notification_exchange if set else control_exchange if set else 'notify'
   * - ``default_notify_timeout`` = ``30``
     - (Integer) The deadline for a sent notification message delivery. Only used when caller does not provide a timeout expiry.
   * - ``default_reply_timeout`` = ``30``
     - (Integer) The deadline for an rpc reply message delivery. Only used when caller does not provide a timeout expiry.
   * - ``default_rpc_exchange`` = ``None``
     - (String) Exchange name used in RPC addresses. Exchange name resolution precedence: Target.exchange if set else default_rpc_exchange if set else control_exchange if set else 'rpc'
   * - ``default_send_timeout`` = ``30``
     - (Integer) The deadline for an rpc cast or call message delivery. Only used when caller does not provide a timeout expiry.
   * - ``link_retry_delay`` = ``10``
     - (Integer) Time to pause between re-connecting an AMQP 1.0 link that failed due to a recoverable error.
   * - ``multicast_address`` = ``multicast``
     - (String) Appended to the address prefix when sending a fanout message. Used by the message bus to identify fanout messages.
   * - ``notify_address_prefix`` = ``openstack.org/om/notify``
     - (String) Address prefix for all generated Notification addresses
   * - ``notify_server_credit`` = ``100``
     - (Integer) Window size for incoming Notification messages
   * - ``reply_link_credit`` = ``200``
     - (Integer) Window size for incoming RPC Reply messages.
   * - ``rpc_address_prefix`` = ``openstack.org/om/rpc``
     - (String) Address prefix for all generated RPC addresses
   * - ``rpc_server_credit`` = ``100``
     - (Integer) Window size for incoming RPC Request messages
   * - ``unicast_address`` = ``unicast``
     - (String) Appended to the address prefix when sending to a particular RPC/Notification server. Used by the message bus to identify messages sent to a single destination.
   * - **[oslo_messaging_rabbit]**
     -
   * - ``connection_factory`` = ``single``
     - (String) Connection factory implementation
   * - **[oslo_messaging_zmq]**
     -
   * - ``rpc_cast_timeout`` = ``-1``
     - (Integer) Seconds to wait before a cast expires (TTL). The default value of -1 specifies an infinite linger period. The value of 0 specifies no linger period. Pending messages shall be discarded immediately when the socket is closed. Only supported by impl_zmq.
   * - ``rpc_poll_timeout`` = ``1``
     - (Integer) The default number of seconds that poll should wait. Poll raises timeout exception when timeout expired.
   * - ``rpc_zmq_bind_address`` = ``*``
     - (String) ZeroMQ bind address. Should be a wildcard (*), an ethernet interface, or IP. The "host" option should point or resolve to this address.
   * - ``rpc_zmq_bind_port_retries`` = ``100``
     - (Integer) Number of retries to find free port number before fail with ZMQBindError.
   * - ``rpc_zmq_contexts`` = ``1``
     - (Integer) Number of ZeroMQ contexts, defaults to 1.
   * - ``rpc_zmq_host`` = ``localhost``
     - (String) Name of this node. Must be a valid hostname, FQDN, or IP address. Must match "host" option, if running Nova.
   * - ``rpc_zmq_ipc_dir`` = ``/var/run/openstack``
     - (String) Directory for holding IPC sockets.
   * - ``rpc_zmq_matchmaker`` = ``redis``
     - (String) MatchMaker driver.
   * - ``rpc_zmq_max_port`` = ``65536``
     - (Integer) Maximal port number for random ports range.
   * - ``rpc_zmq_min_port`` = ``49153``
     - (Port number) Minimal port number for random ports range.
   * - ``rpc_zmq_serialization`` = ``json``
     - (String) Default serialization mechanism for serializing/deserializing outgoing/incoming messages
   * - ``rpc_zmq_topic_backlog`` = ``None``
     - (Integer) Maximum number of ingress messages to locally buffer per topic. Default is unlimited.
   * - ``use_pub_sub`` = ``True``
     - (Boolean) Use PUB/SUB pattern for fanout methods. PUB/SUB always uses proxy.
   * - ``use_router_proxy`` = ``True``
     - (Boolean) Use ROUTER remote proxy.
   * - ``zmq_immediate`` = ``False``
     - (Boolean) This option configures round-robin mode in zmq socket. True means not keeping a queue when server side disconnects. False means to keep queue and messages even if server is disconnected, when the server appears we send all accumulated messages to it.
   * - ``zmq_target_expire`` = ``300``
     - (Integer) Expiration timeout in seconds of a name service record about existing target ( < 0 means no timeout).
   * - ``zmq_target_update`` = ``180``
     - (Integer) Update period in seconds of a name service record about existing target.
   * - **[oslo_middleware]**
     -
   * - ``enable_proxy_headers_parsing`` = ``False``
     - (Boolean) Whether the application is behind a proxy or not. This determines if the middleware should parse the headers or not.
   * - **[service_types]**
     -
   * - ``zaqar`` = ``messaging``
     - (String) Message queue service type.
