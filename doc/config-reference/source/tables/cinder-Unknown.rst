..
    Warning: Do not edit this file. It is automatically generated from the
    software project's code and your changes will be overwritten.

    The tool to generate this file lives in openstack-doc-tools repository.

    Please make any changes needed in the code, then run the
    autogenerate-config-doc tool from the openstack-doc-tools repository, or
    ask for help on the documentation mailing list, IRC channel or meeting.

.. _cinder-Unknown:

.. list-table:: Description of Unknown configuration options
   :header-rows: 1
   :class: config-ref-table

   * - Configuration option = Default value
     - Description
   * - **[DEFAULT]**
     -
   * - ``additional_retry_list`` =
     - (String) FSS additional retry list, separate by ;
   * - ``admin_port`` = ``5000``
     - (Port number) Management port for Synology storage.
   * - ``backup_gcs_proxy_url`` = ``None``
     - (Unknown) URL for http proxy access.
   * - ``backup_use_temp_snapshot`` = ``False``
     - (Boolean) If this is set to True, the backup_use_temp_snapshot path will be used during the backup. Otherwise, it will use backup_use_temp_volume path.
   * - ``chap`` = ``disabled``
     - (String) CHAP authentication mode, effective only for iscsi (disabled|enabled)
   * - ``clone_volume_timeout`` = ``680``
     - (Integer) Create clone volume timeout.
   * - ``cluster`` = ``None``
     - (String) Name of this cluster. Used to group volume hosts that share the same backend configurations to work in HA Active-Active mode. Active-Active is not yet supported.
   * - ``conn_pool_min_size`` = ``2``
     - (Integer) The pool size limit for connections expiration policy
   * - ``conn_pool_ttl`` = ``1200``
     - (Integer) The time-to-live in sec of idle connections in the pool
   * - ``connection_type`` = ``iscsi``
     - (String) Connection type to the IBM Storage Array
   * - ``coprhd_emulate_snapshot`` = ``False``
     - (Boolean) True | False to indicate if the storage array in CoprHD is VMAX or VPLEX
   * - ``coprhd_hostname`` = ``None``
     - (String) Hostname for the CoprHD Instance
   * - ``coprhd_password`` = ``None``
     - (String) Password for accessing the CoprHD Instance
   * - ``coprhd_port`` = ``4443``
     - (Port number) Port for the CoprHD Instance
   * - ``coprhd_project`` = ``None``
     - (String) Project to utilize within the CoprHD Instance
   * - ``coprhd_scaleio_rest_gateway_host`` = ``None``
     - (String) Rest Gateway IP or FQDN for Scaleio
   * - ``coprhd_scaleio_rest_gateway_port`` = ``4984``
     - (Port number) Rest Gateway Port for Scaleio
   * - ``coprhd_scaleio_rest_server_password`` = ``None``
     - (String) Rest Gateway Password
   * - ``coprhd_scaleio_rest_server_username`` = ``None``
     - (String) Username for Rest Gateway
   * - ``coprhd_tenant`` = ``None``
     - (String) Tenant to utilize within the CoprHD Instance
   * - ``coprhd_username`` = ``None``
     - (String) Username for accessing the CoprHD Instance
   * - ``coprhd_varray`` = ``None``
     - (String) Virtual Array to utilize within the CoprHD Instance
   * - ``datera_debug_replica_count_override`` = ``False``
     - (Boolean) ONLY FOR DEBUG/TESTING PURPOSES True to set replica_count to 1
   * - ``default_group_type`` = ``None``
     - (String) Default group type to use
   * - ``device_id`` = ``None``
     - (String) Device id for skip one time password check for logging in Synology storage if OTP is enabled.
   * - ``drbdmanage_disk_options`` = ``{"c-min-rate": "4M"}``
     - (String) Disk options to set on new resources. See http://www.drbd.org/en/doc/users-guide-90/re-drbdconf for all the details.
   * - ``drbdmanage_net_options`` = ``{"connect-int": "4", "allow-two-primaries": "yes", "ko-count": "30", "max-buffers": "20000", "ping-timeout": "100"}``
     - (String) Net options to set on new resources. See http://www.drbd.org/en/doc/users-guide-90/re-drbdconf for all the details.
   * - ``drbdmanage_resource_options`` = ``{"auto-promote-timeout": "300"}``
     - (String) Resource options to set on new resources. See http://www.drbd.org/en/doc/users-guide-90/re-drbdconf for all the details.
   * - ``driver_client_cert`` = ``None``
     - (String) The path to the client certificate for verification, if the driver supports it.
   * - ``driver_client_cert_key`` = ``None``
     - (String) The path to the client certificate key for verification, if the driver supports it.
   * - ``dsware_isthin`` = ``False``
     - (Boolean) The flag of thin storage allocation.
   * - ``dsware_manager`` =
     - (String) Fusionstorage manager ip addr for cinder-volume.
   * - ``enable_unsupported_driver`` = ``False``
     - (Boolean) Set this to True when you want to allow an usupported driver to start. Drivers that haven't maintained a working CI system and testing are marked as unsupported until CI is working again. This also marks a driver as deprecated and may be removed in the next release.
   * - ``fss_debug`` = ``False``
     - (Boolean) Enable HTTP debugging to FSS
   * - ``fss_pool`` =
     - (Integer) FSS pool id in which FalconStor volumes are stored.
   * - ``fusionstorageagent`` =
     - (String) Fusionstorage agent ip addr range.
   * - ``hnas_chap_enabled`` = ``True``
     - (Boolean) Whether the chap authentication is enabled in the iSCSI target or not.
   * - ``hnas_cluster_admin_ip0`` = ``None``
     - (String) The IP of the HNAS cluster admin. Required only for HNAS multi-cluster setups.
   * - ``hnas_mgmt_ip0`` = ``None``
     - (Unknown) Management IP address of HNAS. This can be any IP in the admin address on HNAS or the SMU IP.
   * - ``hnas_password`` = ``None``
     - (String) HNAS password.
   * - ``hnas_ssc_cmd`` = ``ssc``
     - (String) Command to communicate to HNAS.
   * - ``hnas_ssh_port`` = ``22``
     - (Port number) Port to be used for SSH authentication.
   * - ``hnas_ssh_private_key`` = ``None``
     - (String) Path to the SSH private key used to authenticate in HNAS SMU.
   * - ``hnas_svc0_hdp`` = ``None``
     - (String) Service 0 HDP
   * - ``hnas_svc0_iscsi_ip`` = ``None``
     - (Unknown) Service 0 iSCSI IP
   * - ``hnas_svc0_volume_type`` = ``None``
     - (String) Service 0 volume type
   * - ``hnas_svc1_hdp`` = ``None``
     - (String) Service 1 HDP
   * - ``hnas_svc1_iscsi_ip`` = ``None``
     - (Unknown) Service 1 iSCSI IP
   * - ``hnas_svc1_volume_type`` = ``None``
     - (String) Service 1 volume type
   * - ``hnas_svc2_hdp`` = ``None``
     - (String) Service 2 HDP
   * - ``hnas_svc2_iscsi_ip`` = ``None``
     - (Unknown) Service 2 iSCSI IP
   * - ``hnas_svc2_volume_type`` = ``None``
     - (String) Service 2 volume type
   * - ``hnas_svc3_hdp`` = ``None``
     - (String) Service 3 HDP
   * - ``hnas_svc3_iscsi_ip`` = ``None``
     - (Unknown) Service 3 iSCSI IP
   * - ``hnas_svc3_volume_type`` = ``None``
     - (String) Service 3 volume type
   * - ``hnas_username`` = ``None``
     - (String) HNAS username.
   * - ``kaminario_nodedup_substring`` = ``K2-nodedup``
     - (String) DEPRECATED: If volume-type name contains this substring nodedup volume will be created, otherwise dedup volume wil be created. This option is deprecated in favour of 'kaminario:thin_prov_type' in extra-specs and will be removed in the next release.
   * - ``message_ttl`` = ``2592000``
     - (Integer) message minimum life in seconds.
   * - ``metro_domain_name`` = ``None``
     - (String) The remote metro device domain name.
   * - ``metro_san_address`` = ``None``
     - (String) The remote metro device request url.
   * - ``metro_san_password`` = ``None``
     - (String) The remote metro device san password.
   * - ``metro_san_user`` = ``None``
     - (String) The remote metro device san user.
   * - ``metro_storage_pools`` = ``None``
     - (String) The remote metro device pool names.
   * - ``nas_host`` =
     - (String) IP address or Hostname of NAS system.
   * - ``netapp_replication_aggregate_map`` = ``None``
     - (Unknown) Multi opt of dictionaries to represent the aggregate mapping between source and destination back ends when using whole back end replication. For every source aggregate associated with a cinder pool (NetApp FlexVol), you would need to specify the destination aggregate on the replication target device. A replication target device is configured with the configuration option replication_device. Specify this option as many times as you have replication devices. Each entry takes the standard dict config form: netapp_replication_aggregate_map = backend_id:<name_of_replication_device_section>,src_aggr_name1:dest_aggr_name1,src_aggr_name2:dest_aggr_name2,...
   * - ``netapp_snapmirror_quiesce_timeout`` = ``3600``
     - (Integer) The maximum time in seconds to wait for existing SnapMirror transfers to complete before aborting during a failover.
   * - ``nexenta_nbd_symlinks_dir`` = ``/dev/disk/by-path``
     - (String) NexentaEdge logical path of directory to store symbolic links to NBDs
   * - ``one_time_pass`` = ``None``
     - (String) One time password of administrator for logging in Synology storage if OTP is enabled.
   * - ``password`` =
     - (String) Password of administrator for logging in Synology storage.
   * - ``pool_id_filter`` =
     - (List) Pool id permit to use.
   * - ``pool_name`` =
     - (String) Volume on Synology storage to be used for creating lun.
   * - ``pool_type`` = ``default``
     - (String) Pool type, like sata-2copy.
   * - ``proxy`` = ``storage.proxy.IBMStorageProxy``
     - (String) Proxy driver that connects to the IBM Storage Array
   * - ``rpc_zmq_serialization`` = ``json``
     - (String) Default serialization mechanism for serializing/deserializing outgoing/incoming messages
   * - ``scaleio_server_certificate_path`` = ``None``
     - (String) Server certificate path
   * - ``scaleio_verify_server_certificate`` = ``False``
     - (Boolean) verify server certificate
   * - ``scheduler_weight_handler`` = ``cinder.scheduler.weights.OrderedHostWeightHandler``
     - (String) Which handler to use for selecting the host/pool after weighing
   * - ``secondary_san_ip`` =
     - (String) IP address of secondary DSM controller
   * - ``secondary_san_login`` = ``Admin``
     - (String) Secondary DSM user name
   * - ``secondary_san_password`` =
     - (String) Secondary DSM user password name
   * - ``secondary_sc_api_port`` = ``3033``
     - (Port number) Secondary Dell API port
   * - ``ssl_verify`` = ``True``
     - (Boolean) Do certificate validation or not if $driver_use_ssl is True
   * - ``storage_protocol`` = ``iscsi``
     - (String) Protocol for transferring data between host and storage back-end.
   * - ``use_router_proxy`` = ``True``
     - (Boolean) Use ROUTER remote proxy.
   * - ``username`` = ``admin``
     - (String) Administrator of Synology storage.
   * - ``violin_dedup_capable_pools`` =
     - (List) Storage pools capable of dedup and other luns.(Comma separated list)
   * - ``violin_dedup_only_pools`` =
     - (List) Storage pools to be used to setup dedup luns only.(Comma separated list)
   * - ``violin_iscsi_target_ips`` =
     - (List) Target iSCSI addresses to use.(Comma separated list)
   * - ``violin_pool_allocation_method`` = ``random``
     - (String) Method of choosing a storage pool for a lun.
   * - ``vmware_host_port`` = ``443``
     - (Port number) Port number for connecting to VMware vCenter server.
   * - ``vzstorage_default_volume_format`` = ``raw``
     - (String) Default format that will be used when creating volumes if no volume format is specified.
   * - ``zadara_default_snap_policy`` = ``False``
     - (Boolean) VPSA - Attach snapshot policy for volumes
   * - ``zadara_password`` = ``None``
     - (String) VPSA - Password
   * - ``zadara_use_iser`` = ``True``
     - (Boolean) VPSA - Use ISER instead of iSCSI
   * - ``zadara_user`` = ``None``
     - (String) VPSA - Username
   * - ``zadara_vol_encrypt`` = ``False``
     - (Boolean) VPSA - Default encryption policy for volumes
   * - ``zadara_vol_name_template`` = ``OS_%s``
     - (String) VPSA - Default template for VPSA volume names
   * - ``zadara_vpsa_host`` = ``None``
     - (String) VPSA - Management Host name or IP address
   * - ``zadara_vpsa_poolname`` = ``None``
     - (String) VPSA - Storage Pool assigned for volumes
   * - ``zadara_vpsa_port`` = ``None``
     - (Port number) VPSA - Port number
   * - ``zadara_vpsa_use_ssl`` = ``False``
     - (Boolean) VPSA - Use SSL connection
   * - ``zmq_immediate`` = ``False``
     - (Boolean) This option configures round-robin mode in zmq socket. True means not keeping a queue when server side disconnects. False means to keep queue and messages even if server is disconnected, when the server appears we send all accumulated messages to it.
   * - ``zmq_target_update`` = ``180``
     - (Integer) Update period in seconds of a name service record about existing target.
   * - ``zteAheadReadSize`` = ``8``
     - (Integer) Cache readahead size.
   * - ``zteCachePolicy`` = ``1``
     - (Integer) Cache policy. 0, Write Back; 1, Write Through.
   * - ``zteChunkSize`` = ``4``
     - (Integer) Virtual block size of pool. Unit : KB. Valid value : 4, 8, 16, 32, 64, 128, 256, 512.
   * - ``zteControllerIP0`` = ``None``
     - (Unknown) Main controller IP.
   * - ``zteControllerIP1`` = ``None``
     - (Unknown) Slave controller IP.
   * - ``zteLocalIP`` = ``None``
     - (Unknown) Local IP.
   * - ``ztePoolVoAllocatedPolicy`` = ``0``
     - (Integer) Pool volume allocated policy. 0, Auto; 1, High Performance Tier First; 2, Performance Tier First; 3, Capacity Tier First.
   * - ``ztePoolVolAlarmStopAllocatedFlag`` = ``0``
     - (Integer) Pool volume alarm stop allocated flag.
   * - ``ztePoolVolAlarmThreshold`` = ``0``
     - (Integer) Pool volume alarm threshold. [0, 100]
   * - ``ztePoolVolInitAllocatedCapacity`` = ``0``
     - (Integer) Pool volume init allocated Capacity.Unit : KB.
   * - ``ztePoolVolIsThin`` = ``False``
     - (Integer) Whether it is a thin volume.
   * - ``ztePoolVolMovePolicy`` = ``0``
     - (Integer) Pool volume move policy.0, Auto; 1, Highest Available; 2, Lowest Available; 3, No Relocation.
   * - ``zteSSDCacheSwitch`` = ``1``
     - (Integer) SSD cache switch. 0, OFF; 1, ON.
   * - ``zteStoragePool`` =
     - (List) Pool name list.
   * - ``zteUserName`` = ``None``
     - (String) User name.
   * - ``zteUserPassword`` = ``None``
     - (String) User password.
   * - **[oslo_messaging_amqp]**
     -
   * - ``addressing_mode`` = ``dynamic``
     - (String) Indicates the addressing mode used by the driver. Permitted values: 'legacy' - use legacy non-routable addressing 'routable' - use routable addresses 'dynamic' - use legacy addresses if the message bus does not support routing otherwise use routable addressing
   * - ``anycast_address`` = ``anycast``
     - (String) Appended to the address prefix when sending to a group of consumers. Used by the message bus to identify messages that should be delivered in a round-robin fashion across consumers.
   * - ``connection_retry_backoff`` = ``2``
     - (Integer) Increase the connection_retry_interval by this many seconds after each unsuccessful failover attempt.
   * - ``connection_retry_interval`` = ``1``
     - (Integer) Seconds to pause before attempting to re-connect.
   * - ``connection_retry_interval_max`` = ``30``
     - (Integer) Maximum limit for connection_retry_interval + connection_retry_backoff
   * - ``default_notification_exchange`` = ``None``
     - (String) Exchange name used in notification addresses. Exchange name resolution precedence: Target.exchange if set else default_notification_exchange if set else control_exchange if set else 'notify'
   * - ``default_notify_timeout`` = ``30``
     - (Integer) The deadline for a sent notification message delivery. Only used when caller does not provide a timeout expiry.
   * - ``default_reply_timeout`` = ``30``
     - (Integer) The deadline for an rpc reply message delivery. Only used when caller does not provide a timeout expiry.
   * - ``default_rpc_exchange`` = ``None``
     - (String) Exchange name used in RPC addresses. Exchange name resolution precedence: Target.exchange if set else default_rpc_exchange if set else control_exchange if set else 'rpc'
   * - ``default_send_timeout`` = ``30``
     - (Integer) The deadline for an rpc cast or call message delivery. Only used when caller does not provide a timeout expiry.
   * - ``link_retry_delay`` = ``10``
     - (Integer) Time to pause between re-connecting an AMQP 1.0 link that failed due to a recoverable error.
   * - ``multicast_address`` = ``multicast``
     - (String) Appended to the address prefix when sending a fanout message. Used by the message bus to identify fanout messages.
   * - ``notify_address_prefix`` = ``openstack.org/om/notify``
     - (String) Address prefix for all generated Notification addresses
   * - ``notify_server_credit`` = ``100``
     - (Integer) Window size for incoming Notification messages
   * - ``reply_link_credit`` = ``200``
     - (Integer) Window size for incoming RPC Reply messages.
   * - ``rpc_address_prefix`` = ``openstack.org/om/rpc``
     - (String) Address prefix for all generated RPC addresses
   * - ``rpc_server_credit`` = ``100``
     - (Integer) Window size for incoming RPC Request messages
   * - ``unicast_address`` = ``unicast``
     - (String) Appended to the address prefix when sending to a particular RPC/Notification server. Used by the message bus to identify messages sent to a single destination.
   * - **[oslo_messaging_rabbit]**
     -
   * - ``connection_factory`` = ``single``
     - (String) Connection factory implementation
   * - **[oslo_messaging_zmq]**
     -
   * - ``rpc_cast_timeout`` = ``-1``
     - (Integer) Seconds to wait before a cast expires (TTL). The default value of -1 specifies an infinite linger period. The value of 0 specifies no linger period. Pending messages shall be discarded immediately when the socket is closed. Only supported by impl_zmq.
   * - ``rpc_poll_timeout`` = ``1``
     - (Integer) The default number of seconds that poll should wait. Poll raises timeout exception when timeout expired.
   * - ``rpc_zmq_bind_address`` = ``*``
     - (String) ZeroMQ bind address. Should be a wildcard (*), an ethernet interface, or IP. The "host" option should point or resolve to this address.
   * - ``rpc_zmq_bind_port_retries`` = ``100``
     - (Integer) Number of retries to find free port number before fail with ZMQBindError.
   * - ``rpc_zmq_contexts`` = ``1``
     - (Integer) Number of ZeroMQ contexts, defaults to 1.
   * - ``rpc_zmq_host`` = ``localhost``
     - (String) Name of this node. Must be a valid hostname, FQDN, or IP address. Must match "host" option, if running Nova.
   * - ``rpc_zmq_ipc_dir`` = ``/var/run/openstack``
     - (String) Directory for holding IPC sockets.
   * - ``rpc_zmq_matchmaker`` = ``redis``
     - (String) MatchMaker driver.
   * - ``rpc_zmq_max_port`` = ``65536``
     - (Integer) Maximal port number for random ports range.
   * - ``rpc_zmq_min_port`` = ``49153``
     - (Port number) Minimal port number for random ports range.
   * - ``rpc_zmq_serialization`` = ``json``
     - (String) Default serialization mechanism for serializing/deserializing outgoing/incoming messages
   * - ``rpc_zmq_topic_backlog`` = ``None``
     - (Integer) Maximum number of ingress messages to locally buffer per topic. Default is unlimited.
   * - ``use_pub_sub`` = ``True``
     - (Boolean) Use PUB/SUB pattern for fanout methods. PUB/SUB always uses proxy.
   * - ``use_router_proxy`` = ``True``
     - (Boolean) Use ROUTER remote proxy.
   * - ``zmq_immediate`` = ``False``
     - (Boolean) This option configures round-robin mode in zmq socket. True means not keeping a queue when server side disconnects. False means to keep queue and messages even if server is disconnected, when the server appears we send all accumulated messages to it.
   * - ``zmq_target_expire`` = ``300``
     - (Integer) Expiration timeout in seconds of a name service record about existing target ( < 0 means no timeout).
   * - ``zmq_target_update`` = ``180``
     - (Integer) Update period in seconds of a name service record about existing target.
   * - **[oslo_middleware]**
     -
   * - ``enable_proxy_headers_parsing`` = ``False``
     - (Boolean) Whether the application is behind a proxy or not. This determines if the middleware should parse the headers or not.
   * - **[privsep_osbrick]**
     -
   * - ``capabilities`` = ``[]``
     - (Unknown) List of Linux capabilities retained by the privsep daemon.
   * - ``group`` = ``None``
     - (String) Group that the privsep daemon should run as.
   * - ``helper_command`` = ``None``
     - (String) Command to invoke to start the privsep daemon if not using the "fork" method. If not specified, a default is generated using "sudo privsep-helper" and arguments designed to recreate the current configuration. This command must accept suitable --privsep_context and --privsep_sock_path arguments.
   * - ``user`` = ``None``
     - (String) User that the privsep daemon should run as.
   * - **[profiler]**
     -
   * - ``connection_string`` = ``messaging://``
     - (String) Connection string for a notifier backend. Default value is messaging:// which sets the notifier to oslo_messaging.

       Examples of possible values:

       * messaging://: use oslo_messaging driver for sending notifications.
